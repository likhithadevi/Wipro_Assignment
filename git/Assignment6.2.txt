Explain all the git commands.

	Git has a wide range of commands, but here is a breakdown of some of the most commonly used ones, categorized by their function:


Repository Setup:
	1. git init : 
		Initializes an empty Git repository in your current directory.
	2. git clone
		Creates a local copy of a remote repository hosted on a platform like GitHub.

Tracking Changes:
	1. git status : Shows the current state of your working directory, indicating which files are modified , staged, or untracked.
	2. git add filename : Adds a specific file or directory to the staging area, preparing them for the next commit.
	3. git add . : Adds all modified and deleted files in the working directory to the staging area.


Committing Changes:

	1. git commit -m "message" : Creates a snapshot of the staged changes along with a descriptive message. 


Inspecting Changes:

	1. git diff : Shows the difference between the working directory, staging area or different commits.
	2. git log : Shows a history of commits made in the repository.
	3. git show commit hash : shows details of a specific commit , including the commit message and changed files.


Branch Management:

	1. git branch : Lists all existing branches in the repository.
	2.git branch [branch name] : Creates a new branch.
	3. git checkout [branch name] : Switches to a different branch.
	4.git merge [branch name] : Merges changes from another branch into the current branch.


Remote Repositories:

	1. git remote add  [name] [url] : Adds a remote repository with a custom name for reference.
	2. git fetch [remote name] : Downloads the latest changes from the remote repository without merging them locally.
	3. git pull [remote name] [branch name] : Downloads the latest changes from the remote repository and merges them into the current branch.
	4. git push [remote name] [branch name] : Uploads your local commits to the remote repository.


Undoing Changes:

	1.git reset : Used for various reset operations , like discarding changes from the working directory or staging area.
	2. git revert [commit hash] : Creates a new commit that effectively undoes the changes made in a previous commit.


Other Useful Commands:

	1.git tag : Creates a named reference to a specific commit.
	2.git stash : Temporarily stores uncommitted changes away for later use.
	3.git config : Sets various Git configurations, like your username and email.




